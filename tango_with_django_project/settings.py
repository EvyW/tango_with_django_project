"""
Django settings for tango_with_django_project project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os.path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# This stores the path to the directory in which your project’s settings.py module is contained,
# osea: PyCharmProjects/tango_with_django_project/ tango_with_django_project/
BASE_DIR = Path(__file__).resolve().parent.parent

# Creo el path (variable) de donde estån mis templates y las añado más abajo en TEMPLATES
TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates') # Calling os.path() removes a layer, osea: PyCharmProjects/tango_with_django_project/ (en lugar de PyCharmProjects/tango_with_django_project/tango_with_django_project que es donde settingpy está) y luego une 'templates'

# For telling Django about where is my static directory:
STATIC_DIR = os.path.join(BASE_DIR, 'static')

MEDIA_DIR = os.path.join(BASE_DIR, 'media')



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'va^qy077-ycs5^pu0&h3&84*b7#wvh4sol4#a16rp48ruf50=m'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rango', # tell your Django project about the rango app
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tango_with_django_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        #'DIRS': [], # antes
        'DIRS': [TEMPLATE_DIR,], # arriba creé el path
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media'
            ],
        },
    },
]

WSGI_APPLICATION = 'tango_with_django_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3', # see a default database that is powered by a lightweight database engine, SQLite
        'NAME': BASE_DIR / 'db.sqlite3', # The NAME entry for this database is the path to the database file, which is by default db.sqlite3 in the root of your Django project (mirar en el directorio).
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/' # allow us to specify the URL with which static files can be accessed when running the server (osea como accede el cliente!!)
# For example, with STATIC_URL set to /static/, we would be able to access static content at http://127.0.0.1:8000/static/. Think of it as the variable (path) that allows to find the location with which clients can access static content
# check that you end the URL with a forward slash! (e.g. /static/, not /static). As per the official Django documentation, not doing so can open you up to a world of pain!
# se puede ver (solamente) la foto en: http://127.0.0.1:8000/static/images/rango.jpg.


# Static media (incluído por mi)
STATICFILES_DIRS = [STATIC_DIR, ] # el path  STATIC_DIR está arriba (at the top of this file)
# Think of it as the variable (path) that allows to find the location within my computer (within the server side!!)

MEDIA_ROOT = MEDIA_DIR # arriba está el path. It tells Django where to look in your filesystem for media files

MEDIA_URL = '/media/' # It tells Django where to look in your filesystem for media files
